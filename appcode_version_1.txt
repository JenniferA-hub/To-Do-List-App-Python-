def get_todos(filepath):
    with open(filepath, 'r') as file_local:
        todos_local = file_local.readlines()
    return todos_local

def write_todos(filepath,todos_arg):
    with open(filepath,'w') as file:
        file.writelines(todos_arg)





while True:
    user_action = input('Type or add, Show, edit, complete or exit: ')
    user_action = user_action.strip()

    if user_action.startswith('add'):
        todo = user_action[4:]

        todos = get_todos(filepath= 'todos.txt')
        todos.append(todo + '\n')

        write_todos("todos.txt",todos)

    elif user_action.startswith("show"):
        with open('todos.txt', "r") as file:
            todos = file.readlines()

        new_todos = [item.strip('\n') for item in todos]

        for index, item in enumerate(new_todos):
            row = f"{index + 1} - {item}"
            print(row)

    elif user_action.startswith("edit"):
        try:
            number = int(user_action[5:])
            number = number - 1

            todos = get_todos()

            new_todo = input("ENTER A TODO: ")
            todos[number] = new_todo + "\n"

            write_todos("todos.txt",todos)
        except ValueError:
            print("Invalid Command")
            continue

    elif user_action.startswith("complete"):
        try:
            number = int(user_action[9:])

            todos = get_todos()
            index = number - 1
            todo_to_remove = todos[index].strip('\n')
            todos.pop(index)

            write_todos("todos.txt",todos)

            message = f"Todo {todo_to_remove} was removed from the list."
            print(message)
        except IndexError:
            print("Not On List's Range")

    elif user_action.startswith('exit'):
        break
    else:
        print("You typed an invalid command")

print("Bye :)")
